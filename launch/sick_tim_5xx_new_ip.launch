<?xml version="1.0"?>
<!--
     !!!EXPERIMENTAL!!!
     !!! ONLY BINARY COMMAND SUPPORT !!!
     **********************************************
     Lanch File for setting new ip address
     **********************************************
    This is an experimental launch file to set a new ip address in the scanner.
    Maybe one should add a EEPROM-write command. But in our tests this was not necessary.
-->
<!-- Using node option required="true" will close roslaunch after node exits -->

<launch>
  <arg name="hostname" default="192.168.0.1" />
<arg name="new_IP" default="192.168.0.1" />
  <arg name="cloud_topic" default="cloud" />
  <arg name="frame_id" default="cloud" />
  <node name="sick_tim_5xx" pkg="sick_scan" type="sick_generic_caller"  respawn="false" output="screen" required="true">
    <param name="scanner_type" type="string" value="sick_tim_5xx" />
    <!-- -135 deg -->
    <param name="min_ang" type="double" value="-2.35619449" />
    <!-- 135 deg -->
    <param name="max_ang" type="double" value="2.35619449" />
    <param name="use_binary_protocol" type="bool" value="True" />
    <param name="range_max" type="double" value="100.0" />
    <param name="intensity" type="bool" value="True" />
    <param name="hostname" type="string" value="$(arg hostname)" />
    <param name="cloud_topic" type="string" value="$(arg cloud_topic)"/>
    <param name="frame_id" type="str" value="$(arg frame_id)" />
    <param name="port" type="string" value="2112" />
    <param name="timelimit" type="int" value="5" />
    <param name="new_IP_address" type="string" value="$(arg new_IP)"/>
    <param name="min_intensity" type="double" value="0.0"/> <!-- Set range of LaserScan messages to infinity, if intensity < min_intensity (default: 0) -->

    <param name="start_services" type="bool" value="True" />                  <!-- Start ros service for cola commands, default: true -->
    <param name="message_monitoring_enabled" type="bool" value="True" />      <!-- Enable message monitoring with reconnect+reinit in case of timeouts, default: true -->
    <param name="read_timeout_millisec_default" type="int" value="5000"/>     <!-- 5 sec read timeout in operational mode (measurement mode), default: 5000 milliseconds -->
    <param name="read_timeout_millisec_startup" type="int" value="120000"/>   <!-- 120 sec read timeout during startup (sensor may be starting up, which can take up to 120 sec.), default: 120000 milliseconds -->
    <param name="read_timeout_millisec_kill_node" type="int" value="150000"/> <!-- 150 sec pointcloud timeout, ros node will be killed if no point cloud published within the last 150 sec., default: 150000 milliseconds -->
    <param name="client_authorization_pw" type="string" value="F4724744"/>    <!-- Default password for client authorization -->

  </node>
</launch>


